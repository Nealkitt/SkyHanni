<templateSet group="SkyHanni">
    <template name="configBool" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorBoolean&#10;var $internalName$: Boolean = $default$" description="boolean config value" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="default" expression="enum(&quot;true&quot;, &quot;false&quot;)" defaultValue="false" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configSliderF" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorSlider(minValue = 1f, maxValue = 10f, minStep = 1f)&#10;var $internalName$: Float = 1f" description="float slider config value" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configSliderI" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorSlider(minValue = 1f, maxValue = 10f, minStep = 1f)&#10;var $internalName$: Int = 1" description="int slider config value" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <!-- TODO: Change to not use Runnable when moulconfig is updated  -->
    <template name="configButton" value="@Transient&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorButton(buttonText = &quot;$Button$&quot;)&#10;val $internalName$: Runnable = Runnable { $function$ }" description="config Button" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="Reload" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Button" expression="Name" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <variable name="function" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configAccordion" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@Accordion&#10;val $internalName$: $Class$ = $Class$()" description="config accordion" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="Reload" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Class" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="decapitalize(regularExpression(Class,&quot;Config&quot;,&quot;&quot;))" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configKey" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorKeybind(defaultKey = Keyboard.$bind$)&#10;var $internalName$ = Keyboard.$bind$" description="keybind config value" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="bind" expression="completeSmart()" defaultValue="NONE" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configColor" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorColour&#10;var $internalName$: ChromaColour = Color.RED.toChromaColor()" description="color config value" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configLink" value="@ConfigLink(owner = $owner$::class, field = &quot;$member$&quot;)" description="config link" toReformat="false" toShortenFQNames="true">
        <variable name="owner" expression="className()" defaultValue="" alwaysStopAt="true" />
        <variable name="member" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configCategory" value="@Expose&#10;@Category(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;val $internalName$: $Class$ = $Class$()" description="config category" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="Reload" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Class" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="decapitalize(regularExpression(Class,&quot;Config&quot;,&quot;&quot;))" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configPos" value="@Expose&#10;@ConfigLink(owner = $owner$::class, field = &quot;$member$&quot;)&#10;val $internalName$: Position = Position(20, 20)" description="position config value" toReformat="false" toShortenFQNames="true">
        <variable name="internalName" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
        <variable name="owner" expression="className()" defaultValue="enable" alwaysStopAt="true" />
        <variable name="member" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="configText" value="@Expose&#10;@ConfigOption(name = &quot;$Name$&quot;, desc = &quot;$Desc$.&quot;)&#10;@ConfigEditorText&#10;var $internalName$: String = $DefaultText$" description="text config value" toReformat="false" toShortenFQNames="true">
        <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="Desc" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="DefaultText" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="internalName" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="eFun" value="@HandleEvent&#10;fun on$EventPre$(event: $Event$) {&#10;    // TODO&#10;}" description="event handler receiver" toReformat="true" toShortenFQNames="true">
        <variable name="Event" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
        <variable name="EventPre" expression="capitalize(regularExpression(Event, &quot;SkyHanni|Event|\\.|&lt;.*?&gt;&quot;, &quot;&quot;))" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="KOTLIN_OBJECT_DECLARATION" value="true" />
            <option name="KOTLIN_STATEMENT" value="true" />
        </context>
    </template>

    <template name="enabled" value="fun isEnabled() = $condition$" description="isEnabled function for features" toReformat="true" toShortenFQNames="true">
        <variable name="condition" expression="completeSmart()" defaultValue="true" alwaysStopAt="true" />
        <context>
            <option name="KOTLIN_CLASS" value="true" />
        </context>
    </template>

    <template name="fconfig" value="private val config get() = SkyHanniMod.feature" description="feature config getter" toReformat="true" toShortenFQNames="true">
        <context>
            <option name="KOTLIN_OBJECT_DECLARATION" value="true" />
        </context>
    </template>

    <template name="&amp;&amp;" value="ยง" description="replace &amp;&amp; with ยง" toReformat="false" toShortenFQNames="true">
        <context>
            <option name="OTHER" value="true" />
        </context>
    </template>
</templateSet>
